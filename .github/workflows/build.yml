# GitHub Action to build a YIO Remote web configurator for the YIO remote-os.
# Creates a pre-release if pushed on master branch without a version tag.
# Creates a release if pushed on master branch with a version tag.
---
  name: "Build & Release"

  on:
    push:
    pull_request:

  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Fetch all tags to determine version
          run: |
            git fetch origin +refs/tags/*:refs/tags/*
            echo "::set-env name=VERSION::$(git describe --match "v[0-9]*" --tags HEAD --always)"

        - name: Set build timestamp
          run: echo "::set-env name=TIMESTAMP::$(date +"%Y%m%d_%H%M%S")"      

        - name: npm install, build
          run: |
            npm install
            npm run build
            
        - name: add version
          run: |
            echo ${{ env.VERSION }} >> version.txt
 
        - name: Archive production artifacts
          uses: actions/upload-artifact@v1
          with:
            name: YIO-Web-configurator
            path: dist
      
    release:
      name: Create Release
      if: github.ref == 'refs/heads/master' || contains(github.ref, 'tags/v')
      runs-on: ubuntu-latest
      needs: build

      steps:
        - run: mkdir release
        - name: Download release artifact
          uses: actions/download-artifact@v1
          with:
            name: YIO-Web-configurator
            path: dist

        - name: Get artifact version
          run: |
            read -r APP_VERSION < version.txt
            echo "::set-env name=TIMESTAMP::$(date +"%Y%m%d_%H%M%S")"
            
        - name: Create GitHub release archives
          run: |
            tar cvf YIO-Web-configurator-${{ env.APP_VERSION }}-${{ env.TIMESTAMP }}-remote-debug.tar -C debug .
            tar cvf YIO-Web-configurator-${{ env.APP_VERSION }}-${{ env.TIMESTAMP }}-remote-release.tar -C release .
            
        - name: Create Pre-Release ${{ env.VERSION }}
          uses: "marvinpinto/action-automatic-releases@latest"
          if: "!contains(github.ref, 'tags/v')"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: "latest"
            prerelease: true
            title: "Development Build ${{ env.APP_VERSION }}"
            files: |
                *.tar
